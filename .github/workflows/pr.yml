name: Pull Request

on: # yamllint disable-line rule:truthy
  pull_request:

# This workflow should cancel previous builds since it means that a new commit has been made to the PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Register yamllint problem matcher
        run: |
          echo "::add-matcher::.github/workflows/matchers/yamllint.json"

      - name: Validate YAML
        run: yamllint --strict --format github .

  lockfiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      - name: Update lockfiles
        run: ./gradlew alldependencies --write-locks

      - name: Check for missing lockfiles update
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo $(git status --porcelain)
            echo -e "\n‚ùå Uncommitted changes detected in the repository."
            echo -e "üîç It seems that the dependency lockfiles are outdated. Please update them by running:"
            echo -e "   ./gradlew alldependencies --write-locks"
            echo -e "   Then commit the updated lockfiles to your branch."
            error_message="Dependency changes detected, but lockfiles are not updated. Run \`./gradlew alldependencies --write-locks\` and commit the changes."
            echo "::error file=gradle/libs.versions.toml,line=1,title=‚õî Lockfile Update Required::${error_message}"
            exit 1;
          else
            echo -e "\n‚úîÔ∏è All dependency lockfiles are up to date. No uncommitted changes detected."
          fi

  ktlint:
    needs: [yamllint]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      # Since `build-logic` is added with `includeBuild` we have to call ktlint explicitly on `:convention`.
      - name: Validate ktlint
        run: ./gradlew ktlintCheck :build-logic:convention:ktlintCheck --continue

      - uses: ./.github/actions/upload-sarif-results
        if: always()
        with:
          category: "KTlint"

  lint:
    needs: [lockfiles, ktlint]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      - name: Validate Lint
        run: ./gradlew lint --continue

      - name: Upload lint reports (HTML)
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: lint-reports
          path: "**/build/reports/lint-results-*.html"

      - uses: ./.github/actions/upload-sarif-results
        if: always()
        with:
          category: "Android Lint"

  screenshot_test:
    name: "Screenshot Tests"
    needs: [lint, lockfiles, ktlint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      - name: Validate Screenshot Previews
        run: ./gradlew validateDebugScreenshotTest validateFullDebugScreenshotTest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: Screenshot test results
          path: |
            **/build/test-results/**/TEST-*.xml

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: Screenshot test failure HTML report
          path: |
            **/build/reports/screenshotTest/**

  pr_build:
    needs: [lockfiles, ktlint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Check for modified DB schemas on branch
        run: |
          if git diff --name-only --diff-filter=DMR origin/main... | grep "^common/schemas"; then
            echo -e "\n‚ùå Existing database schema modified, please increase the database version instead"
            exit 1
          else
            echo -e "\n‚úîÔ∏è No changed database schemas on branch"
          fi

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      - name: Check version file creation
        run: ./gradlew versionFile

      - name: Build Debug APK
        run: |
          ./gradlew :common:assemble :app:assembleDebug :wear:assembleDebug :automotive:assembleDebug

      - name: Check for missing/modified DB schemas after build
        run: |
          if [[ $(git status common/schemas --porcelain) ]]; then
            echo $(git status common/schemas --porcelain)
            echo -e "\n‚ùå Found uncommitted changes in database schema directory, please make sure to include all changes in your commit(s)"
            exit 1;
          else
            echo -e "\n‚úîÔ∏è No changes in database schema directory after build"
          fi

      - name: Archive Debug Build
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: ./**/*.apk

  pr_build_release:
    needs: [lockfiles, ktlint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"
      - name: Generate dummy keystore
        run: |
          keytool -genkeypair -v \
          -alias androiddebugkey \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -keystore /home/runner/work/android/android/ci_dummy_keystore.keystore \
          -dname "CN=Android CI dummy, O=Android, C=FR" \
          -storepass android \
          -keypass android
      - name: Build Release
        env:
          KEYSTORE_PATH: /home/runner/work/android/android/ci_dummy_keystore.keystore
          KEYSTORE_ALIAS: androiddebugkey
          KEYSTORE_ALIAS_PASSWORD: android
          KEYSTORE_PASSWORD: android
        # Disable lint tasks since we have a dedicated job for this in the workflow
        run: |
          ./gradlew :common:assemble :app:assembleRelease :wear:assembleRelease :automotive:assembleRelease

  unit_tests:
    name: "Unit Tests"
    needs: [lint, lockfiles, ktlint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      - name: Run test
        # Run testFullDebugUnitTest at the app level since :automotive shares the same sourceSet than app. Minimal and Full are the same in unit tests for now
        run: ./gradlew testDebugUnitTest :app:testFullDebugUnitTest :lint:test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: Unit test results
          path: |
            **/build/test-results/**/TEST-*.xml

  instrumentation_test:
    name: "Instrumentation Tests"
    needs: [lint, lockfiles, ktlint]
    runs-on: ubuntu-latest
    strategy:
      # We want the result of each device to be reported, so we can't fail-fast
      fail-fast: false
      matrix:
        configuration:
          - api-level: 21
            arch: x86_64
            profile: "Nexus 5"
            target: "google_apis"
            gradle_target: ":app:connectedFullDebugAndroidTest :app:connectedMinimalDebugAndroidTest :common:connectedDebugAndroidTest :onboarding:connectedDebugAndroidTest"
          - api-level: 30
            arch: x86
            profile: "tv_4k"
            target: "android-tv"
            gradle_target: ":app:connectedFullDebugAndroidTest :app:connectedMinimalDebugAndroidTest :common:connectedDebugAndroidTest :onboarding:connectedDebugAndroidTest"
          - api-level: 36
            arch: x86_64
            profile: "pixel_7"
            target: "google_apis"
            gradle_target: ":app:connectedFullDebugAndroidTest :app:connectedMinimalDebugAndroidTest :common:connectedDebugAndroidTest :onboarding:connectedDebugAndroidTest"
          - api-level: 33
            arch: x86_64
            profile: "automotive_1024p_landscape"
            target: "android-automotive"
            gradle_target: ":automotive:connectedFullDebugAndroidTest :automotive:connectedMinimalDebugAndroidTest :common:connectedDebugAndroidTest :onboarding:connectedDebugAndroidTest"
          - api-level: "34"
            system-image-api-level: "34-ext9"
            arch: x86_64
            profile: "automotive_1024p_landscape"
            target: "android-automotive"
            gradle_target: ":automotive:connectedFullDebugAndroidTest :automotive:connectedMinimalDebugAndroidTest :common:connectedDebugAndroidTest :onboarding:connectedDebugAndroidTest"
          - api-level: 26
            arch: x86
            profile: "wearos_square"
            target: "android-wear"
            gradle_target: ":wear:connectedDebugAndroidTest :common:connectedDebugAndroidTest"
          - api-level: 34
            arch: x86_64
            profile: "wearos_small_round"
            target: "android-wear"
            gradle_target: ":wear:connectedDebugAndroidTest :common:connectedDebugAndroidTest"
    steps:
      - name: Delete unnecessary tools üîß
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          docker-images: false # Takes 16s, enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: ./.github/actions/setup-build-env
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          mock-google-services: "true"

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: AVD cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.configuration.target }}-${{ matrix.configuration.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ matrix.configuration.api-level }}
          arch: ${{ matrix.configuration.arch }}
          force-avd-creation: false
          disable-animations: true
          disk-size: 1G # We need to ensure that there is enough space for the emulator to run. If not we get 'Failed to commit install' errors.
          heap-size: 1G
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          profile: ${{ matrix.configuration.profile }}
          target: ${{ matrix.configuration.target }}
          system-image-api-level: ${{ matrix.configuration.system-image-api-level }}
          script: |
            echo "Generated AVD snapshot for caching."

      - name: Build projects and run instrumentation tests
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: ${{ matrix.configuration.api-level }}
          arch: ${{ matrix.configuration.arch }}
          force-avd-creation: false
          disable-animations: true
          disk-size: 1G
          heap-size: 1G
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          profile: ${{ matrix.configuration.profile }}
          target: ${{ matrix.configuration.target }}
          system-image-api-level: ${{ matrix.configuration.system-image-api-level }}
          script: ./gradlew ${{ matrix.configuration.gradle_target }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: Instrumentation test results (API${{ matrix.configuration.api-level }}) ${{ matrix.configuration.target }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*

  publish_test_results:
    name: "Publish Tests Results"
    needs: [instrumentation_test, unit_tests, screenshot_test]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0

      - name: Publish Test Results EnricoMi
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        if: always()
        with:
          comment_mode: "failures"
          # We want to fail the build to block the merge if any test fail it allows us simplify the setup of the protected branch.
          action_fail: true
          files: |
            **/androidTest-results/**/TEST-*.xml
            **/build/test-results/**/TEST-*.xml
