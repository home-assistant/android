name: Pull Request

on:
  pull_request:
    branches: [master]

jobs:
  ktlint:
    runs-on: ubuntu-latest
    permissions:
        security-events: write
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-build-env
        with:
          mock-google-services: "true"

        # Since `build-logic` is added with `includeBuild` we have to call ktlint explicitly on `:convention`.
      - name: Validate ktlint convention plugins
        run: ./gradlew :build-logic:convention:ktlintCheck

      - name: Validate ktlint
        run: ./gradlew ktlintCheck

      - name: Upload lint reports (SARIF)
        if: ${{ !cancelled() && hashFiles('**/*.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "./"

  lint:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-build-env
        with:
          mock-google-services: "true"

      - name: Validate Lint
        run: ./gradlew lint

      - name: Upload lint reports (HTML)
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: "**/build/reports/lint-results-*.html"

      - name: Upload lint reports (SARIF)
        if: ${{ !cancelled() && hashFiles('**/*.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "./"

  pr_build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for modified DB schemas on branch
        run: |
          if git diff --name-only --diff-filter=DMR origin/master... | grep "^common/schemas"; then
            echo -e "\n‚ùå Existing database schema modified, please increase the database version instead"
            exit 1
          else
            echo -e "\n‚úîÔ∏è No changed database schemas on branch"
          fi

      - uses: ./.github/actions/setup-build-env
        with:
          mock-google-services: "true"

      - name: Build Debug APK
        run: |
          ./gradlew :common:assemble :app:assembleDebug :wear:assembleDebug :automotive:assembleDebug

      - name: Check for missing/modified DB schemas after build
        run: |
          if [[ $(git status common/schemas --porcelain) ]]; then
            echo $(git status common/schemas --porcelain)
            echo -e "\n‚ùå Found uncommitted changes in database schema directory, please make sure to include all changes in your commit(s)"
            exit 1;
          else
            echo -e "\n‚úîÔ∏è No changes in database schema directory after build"
          fi

      - name: Archive Debug Build
        uses: actions/upload-artifact@v4
        with:
          path: ./**/*.apk

  instrumentation_test:
    runs-on: ubuntu-latest
    strategy:
      # We want the result of each device to be reported, so we can't fail-fast
      fail-fast: false
      matrix:
        api-level: [21, 35]
    steps:
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        with:
          ## If no one connects after 5 minutes, shut down server.
          wait-timeout-minutes: 5
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          limit-access-to-actor: true
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: timoPtr

      - name: Delete unnecessary tools üîß
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          docker-images: false # Takes 16s, enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow

      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-build-env
        with:
          mock-google-services: "true"
          cache-disabled: "true"

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          disable-animations: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching."


      - name: Build projects and run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-results-API${{ matrix.api-level }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*
